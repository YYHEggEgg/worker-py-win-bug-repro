name: Test Build

on:
  push:
    branches:
      - master

env:
  PY_VERSION: 3.7
  NODE_VERSION: 20
  VENV_NAME: env

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install npm dependencies
      run: |
        npm install
        npm install wrangler@latest
      shell: cmd
      env:
        ACTIONS_RUNNER_DEBUG: true

    - name: Set up Python ${{ env.PY_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PY_VERSION }}

    - name: Install Python virtualenv and transcrypt
      run: |
        python -m pip install --upgrade pip
        pip install virtualenv transcrypt

    - name: Create and activate virtual environment
      run: |
        python -m virtualenv ${{ env.VENV_NAME }}
        .\${{ env.VENV_NAME }}\Scripts\activate
      shell: cmd

    - name: Output versions to log
      run: |
        echo "wrangler version: " >> versions.log
        npx wrangler --version >> versions.log
        echo "Python version: " >> versions.log
        python --version >> versions.log
        echo "npm version: " >> versions.log
        npm --version >> versions.log
      shell: cmd

    - name: Build with npm
      run: npm run build | Out-File -FilePath build.log -Encoding utf8
      shell: powershell

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: repro-results-windows
        path: |
          versions.log
          build.log

  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install npm dependencies
      run: |
        npm install
        npm install wrangler@latest
      env:
        ACTIONS_RUNNER_DEBUG: true

    - name: Set up Python ${{ env.PY_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PY_VERSION }}

    - name: Install Python virtualenv and transcrypt
      run: |
        python -m pip install --upgrade pip
        pip install virtualenv transcrypt

    - name: Create and activate virtual environment
      run: |
        python -m virtualenv ${{ env.VENV_NAME }}
        .\${{ env.VENV_NAME }}\Scripts\activate

    - name: Output versions to log
      run: |
        echo "wrangler version: " >> versions.log
        npx wrangler --version >> versions.log
        echo "Python version: " >> versions.log
        python --version >> versions.log
        echo "npm version: " >> versions.log
        npm --version >> versions.log

    - name: Build with npm
      run: npm run build > build.log

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: control-group-ubuntu
        path: |
          versions.log
          build.log
